//g++  5.4.0
 
#include<bits/stdc++.h>
using namespace std;
 
#define ff first
#define ss second
#define int long long
#define pb push_back
#define pii pair< int,int >
#define fast ios::sync_with_stdio(0) , cin.tie(0) , cout.tie(0) ;
#define L(p) 2*p+1
#define R(p) 2*p+2
 
const int nax = 2e5+10;
int jt[4*nax] , a[nax];
 
int fun(int a,int b)
{
    return a+b; // whatever u wish
}
void build(int l , int h , int p )
{
	if(l == h)
	{
		jt[p] = 1;
		return;
	}
	int m = (l+h)>>1;
	build(l , m , L(p));
	build(m+1 , h , R(p));
	jt[p] = fun(jt[L(p)],jt[R(p)]);
	return;
}
 
void update(int l ,int h , int p, int q)
{
    if( l == h ) {jt[p] = 0; return;}
	int m = (l + h )>> 1;
	if( q <= m )update( l , m , L(p) ,q );
	else        update(m+1 , h , R(p) , q);
	jt[p] = fun(jt[L(p)],jt[R(p)]);
	return;
}
 
int query(int l,int h, int p, int q )
{
    if( l == h ) return l;
    int m = (l+h)>>1;
    if( jt[L(p)] >= q ) return query( l,m,L(p),q);
	return query( m+1, h, R(p) , q-jt[L(p)] );
}
signed main()
{
    fast;
    int n , q;
    cin >> n;
    q = n;
    for(int i=1 ;i<=n ;i++ ) cin >> a[i];
    build( 1,n,0 );
    while( q-- )
    {
        int x;
        cin >> x;
        x = query( 1,n,0,x );
        cout << a[x] << " ";
        update( 1,n,0,x);
    }
}
